#==============================================================================
# Name : AutoSave
# Author : biud436
# Version : 1.0
#==============================================================================
# ** Terms of Use
#==============================================================================
# Free for commercial and non-commercial use
#==============================================================================

#==============================================================================
# module AUTO_SAVE
#==============================================================================
module AUTO_SAVE
TIME = 15;
SLOT = 0;
end
#==============================================================================
# class Game_Map
#==============================================================================
class Game_Map
attr_reader   :first_save_time
attr_reader   :nnow_save_time
attr_reader   :anow_save_time
#==============================================================================
# 클래스 초기화
#==============================================================================
  alias ti_initialize initialize
  def initialize
  ti_initialize
  @first_save_time = (Time.now).to_i
  @nnow_save_time = (Time.now).to_i
  @anow_save_time = 1+(Time.now).to_i
  end
#==============================================================================
# 초시계 실시간 계산
#==============================================================================
  def up_counter
    @nnow_save_time = (Time.now).to_i
  end
#==============================================================================
# 초시계 리셋하기
#==============================================================================
  def set_counter
  @nnow_save_time = (Time.now).to_i
  @anow_save_time = AUTO_SAVE::TIME + (Time.now).to_i
  end

end
#==============================================================================
# class Game_Player
#==============================================================================
class Game_Player
  alias ti_update update
#==============================================================================
# 실시간으로 계산하기
#==============================================================================
  def update
    ti_update
    get_time
  end
#==============================================================================
# 초시계 동작
#==============================================================================
  def get_time
    if $game_map.nnow_save_time >= $game_map.anow_save_time + 1
      default_time
      $game_map.set_counter;
    else
      $game_map.up_counter;
    end
  end
#==============================================================================
# 저장하기
#==============================================================================
  def default_time
    DataManager.save_game(AUTO_SAVE::SLOT)
    $game_map.set_counter
  end
#==============================================================================
# 초시계 가져오기
#==============================================================================
  def time_now
    $game_map.nnow_save_time - $game_map.first_save_time
  end
end
